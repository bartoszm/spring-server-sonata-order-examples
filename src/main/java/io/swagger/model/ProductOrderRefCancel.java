package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.ProductOrderStateType;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * A reference to a product order used to perform cancellation request.
 */
@ApiModel(description = "A reference to a product order used to perform cancellation request.")
@Validated
public class ProductOrderRefCancel   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("externalId")
  private String externalId = null;

  @JsonProperty("state")
  private ProductOrderStateType state = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("@referredType")
  private String referredType = null;

  public ProductOrderRefCancel id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.")
  @NotNull


  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductOrderRefCancel href(String href) {
    this.href = href;
    return this;
  }

  /**
   * Hyperlink to access the order
   * @return href
  **/
  @ApiModelProperty(value = "Hyperlink to access the order")


  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public ProductOrderRefCancel externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * A number that uniquely identifies an order within the buyer's enterprise. Must be provided if provided when the order was initially accepted
   * @return externalId
  **/
  @ApiModelProperty(value = "A number that uniquely identifies an order within the buyer's enterprise. Must be provided if provided when the order was initially accepted")


  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ProductOrderRefCancel state(ProductOrderStateType state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")

  @Valid

  public ProductOrderStateType getState() {
    return state;
  }

  public void setState(ProductOrderStateType state) {
    this.state = state;
  }

  public ProductOrderRefCancel version(String version) {
    this.version = version;
    return this;
  }

  /**
   * The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)
   * @return version
  **/
  @ApiModelProperty(value = "The version number that the Buyer uses to refer to this particular version of the order. This not checked for conformance (informative information)")


  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ProductOrderRefCancel referredType(String referredType) {
    this.referredType = referredType;
    return this;
  }

  /**
   * Technical attribute to extend the API
   * @return referredType
  **/
  @ApiModelProperty(value = "Technical attribute to extend the API")


  public String getReferredType() {
    return referredType;
  }

  public void setReferredType(String referredType) {
    this.referredType = referredType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductOrderRefCancel productOrderRefCancel = (ProductOrderRefCancel) o;
    return Objects.equals(this.id, productOrderRefCancel.id) &&
        Objects.equals(this.href, productOrderRefCancel.href) &&
        Objects.equals(this.externalId, productOrderRefCancel.externalId) &&
        Objects.equals(this.state, productOrderRefCancel.state) &&
        Objects.equals(this.version, productOrderRefCancel.version) &&
        Objects.equals(this.referredType, productOrderRefCancel.referredType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, externalId, state, version, referredType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOrderRefCancel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    referredType: ").append(toIndentedString(referredType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

