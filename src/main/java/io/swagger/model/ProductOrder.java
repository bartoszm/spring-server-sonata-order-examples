package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.BillingAccountRef;
import io.swagger.model.DesiredOrderResponses;
import io.swagger.model.Note;
import io.swagger.model.OrderActivity;
import io.swagger.model.OrderItem;
import io.swagger.model.OrderMessage;
import io.swagger.model.PricingMethod;
import io.swagger.model.ProductOrderStateType;
import io.swagger.model.RelatedParty;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * A ProductOrder is a type of business interaction that is used to procure a Product based upon a Product Offering.
 */
@ApiModel(description = "A ProductOrder is a type of business interaction that is used to procure a Product based upon a Product Offering.")
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-09-25T18:12:48.389Z")

public class ProductOrder   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("externalId")
  private String externalId = null;

  @JsonProperty("orderDate")
  private OffsetDateTime orderDate = null;

  @JsonProperty("buyerRequestDate")
  private OffsetDateTime buyerRequestDate = null;

  @JsonProperty("state")
  private ProductOrderStateType state = null;

  @JsonProperty("requestedStartDate")
  private OffsetDateTime requestedStartDate = null;

  @JsonProperty("requestedCompletionDate")
  private OffsetDateTime requestedCompletionDate = null;

  @JsonProperty("expectedCompletionDate")
  private OffsetDateTime expectedCompletionDate = null;

  @JsonProperty("completionDate")
  private OffsetDateTime completionDate = null;

  @JsonProperty("cancellationDate")
  private OffsetDateTime cancellationDate = null;

  @JsonProperty("cancellationReason")
  private String cancellationReason = null;

  @JsonProperty("expeditePriority")
  private Boolean expeditePriority = null;

  @JsonProperty("priority")
  private Integer priority = null;

  @JsonProperty("orderActivity")
  private OrderActivity orderActivity = null;

  @JsonProperty("desiredResponses")
  private DesiredOrderResponses desiredResponses = null;

  @JsonProperty("orderVersion")
  private String orderVersion = "1";

  @JsonProperty("projectId")
  private String projectId = null;

  @JsonProperty("tspRestorationPriority")
  private String tspRestorationPriority = null;

  @JsonProperty("relatedBuyerPON")
  private String relatedBuyerPON = null;

  @JsonProperty("pricingMethod")
  private PricingMethod pricingMethod = null;

  @JsonProperty("pricingReference")
  private String pricingReference = null;

  @JsonProperty("pricingTerm")
  private Integer pricingTerm = null;

  @JsonProperty("billingAccount")
  private BillingAccountRef billingAccount = null;

  @JsonProperty("relatedParty")
  @Valid
  private List<RelatedParty> relatedParty = new ArrayList<RelatedParty>();

  @JsonProperty("note")
  @Valid
  private List<Note> note = null;

  @JsonProperty("orderItem")
  @Valid
  private List<OrderItem> orderItem = new ArrayList<OrderItem>();

  @JsonProperty("orderMessage")
  @Valid
  private List<OrderMessage> orderMessage = null;

  @JsonProperty("@type")
  private String type = null;

  @JsonProperty("@schemaLocation")
  private String schemaLocation = null;

  @JsonProperty("@baseType")
  private String baseType = null;

  public ProductOrder id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.")
  @NotNull


  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductOrder href(String href) {
    this.href = href;
    return this;
  }

  /**
   * Hyperlink to access the order
   * @return href
  **/
  @ApiModelProperty(required = true, value = "Hyperlink to access the order")
  @NotNull


  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public ProductOrder externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * A number that uniquely identifies an order within the buyer's enterprise.
   * @return externalId
  **/
  @ApiModelProperty(required = true, value = "A number that uniquely identifies an order within the buyer's enterprise.")
  @NotNull


  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ProductOrder orderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
    return this;
  }

  /**
   * Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
   * @return orderDate
  **/
  @ApiModelProperty(required = true, value = "Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)")
  @NotNull

  @Valid

  public OffsetDateTime getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }

  public ProductOrder buyerRequestDate(OffsetDateTime buyerRequestDate) {
    this.buyerRequestDate = buyerRequestDate;
    return this;
  }

  /**
   * Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
   * @return buyerRequestDate
  **/
  @ApiModelProperty(value = "Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)")

  @Valid

  public OffsetDateTime getBuyerRequestDate() {
    return buyerRequestDate;
  }

  public void setBuyerRequestDate(OffsetDateTime buyerRequestDate) {
    this.buyerRequestDate = buyerRequestDate;
  }

  public ProductOrder state(ProductOrderStateType state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  @NotNull

  @Valid

  public ProductOrderStateType getState() {
    return state;
  }

  public void setState(ProductOrderStateType state) {
    this.state = state;
  }

  public ProductOrder requestedStartDate(OffsetDateTime requestedStartDate) {
    this.requestedStartDate = requestedStartDate;
    return this;
  }

  /**
   * The buyer's requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).
   * @return requestedStartDate
  **/
  @ApiModelProperty(value = "The buyer's requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).")

  @Valid

  public OffsetDateTime getRequestedStartDate() {
    return requestedStartDate;
  }

  public void setRequestedStartDate(OffsetDateTime requestedStartDate) {
    this.requestedStartDate = requestedStartDate;
  }

  public ProductOrder requestedCompletionDate(OffsetDateTime requestedCompletionDate) {
    this.requestedCompletionDate = requestedCompletionDate;
    return this;
  }

  /**
   * Identifies the buyer's desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).
   * @return requestedCompletionDate
  **/
  @ApiModelProperty(required = true, value = "Identifies the buyer's desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00).")
  @NotNull

  @Valid

  public OffsetDateTime getRequestedCompletionDate() {
    return requestedCompletionDate;
  }

  public void setRequestedCompletionDate(OffsetDateTime requestedCompletionDate) {
    this.requestedCompletionDate = requestedCompletionDate;
  }

  public ProductOrder expectedCompletionDate(OffsetDateTime expectedCompletionDate) {
    this.expectedCompletionDate = expectedCompletionDate;
    return this;
  }

  /**
   * Expected delivery date amended by the provider
   * @return expectedCompletionDate
  **/
  @ApiModelProperty(value = "Expected delivery date amended by the provider")

  @Valid

  public OffsetDateTime getExpectedCompletionDate() {
    return expectedCompletionDate;
  }

  public void setExpectedCompletionDate(OffsetDateTime expectedCompletionDate) {
    this.expectedCompletionDate = expectedCompletionDate;
  }

  public ProductOrder completionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)
   * @return completionDate
  **/
  @ApiModelProperty(value = "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)")

  @Valid

  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }

  public ProductOrder cancellationDate(OffsetDateTime cancellationDate) {
    this.cancellationDate = cancellationDate;
    return this;
  }

  /**
   * Identifies the date the Seller canceled the Order
   * @return cancellationDate
  **/
  @ApiModelProperty(value = "Identifies the date the Seller canceled the Order")

  @Valid

  public OffsetDateTime getCancellationDate() {
    return cancellationDate;
  }

  public void setCancellationDate(OffsetDateTime cancellationDate) {
    this.cancellationDate = cancellationDate;
  }

  public ProductOrder cancellationReason(String cancellationReason) {
    this.cancellationReason = cancellationReason;
    return this;
  }

  /**
   * Indicates reason why buyer requested cancellation
   * @return cancellationReason
  **/
  @ApiModelProperty(value = "Indicates reason why buyer requested cancellation")


  public String getCancellationReason() {
    return cancellationReason;
  }

  public void setCancellationReason(String cancellationReason) {
    this.cancellationReason = cancellationReason;
  }

  public ProductOrder expeditePriority(Boolean expeditePriority) {
    this.expeditePriority = expeditePriority;
    return this;
  }

  /**
   * Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer.
   * @return expeditePriority
  **/
  @ApiModelProperty(value = "Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer.")


  public Boolean isExpeditePriority() {
    return expeditePriority;
  }

  public void setExpeditePriority(Boolean expeditePriority) {
    this.expeditePriority = expeditePriority;
  }

  public ProductOrder priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * An integer that specifies that expedited treatment is to be provided in a specific priority. This field will be ignored if the Expedite/Priority Indicator is False. The valid values and the business/operational rules for this field will be defined by the Seller as part of the contracting or on-boarding process.
   * @return priority
  **/
  @ApiModelProperty(value = "An integer that specifies that expedited treatment is to be provided in a specific priority. This field will be ignored if the Expedite/Priority Indicator is False. The valid values and the business/operational rules for this field will be defined by the Seller as part of the contracting or on-boarding process.")


  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public ProductOrder orderActivity(OrderActivity orderActivity) {
    this.orderActivity = orderActivity;
    return this;
  }

  /**
   * Get orderActivity
   * @return orderActivity
  **/
  @ApiModelProperty(required = true, value = "")
  @NotNull

  @Valid

  public OrderActivity getOrderActivity() {
    return orderActivity;
  }

  public void setOrderActivity(OrderActivity orderActivity) {
    this.orderActivity = orderActivity;
  }

  public ProductOrder desiredResponses(DesiredOrderResponses desiredResponses) {
    this.desiredResponses = desiredResponses;
    return this;
  }

  /**
   * Get desiredResponses
   * @return desiredResponses
  **/
  @ApiModelProperty(required = true, value = "")
  @NotNull

  @Valid

  public DesiredOrderResponses getDesiredResponses() {
    return desiredResponses;
  }

  public void setDesiredResponses(DesiredOrderResponses desiredResponses) {
    this.desiredResponses = desiredResponses;
  }

  public ProductOrder orderVersion(String orderVersion) {
    this.orderVersion = orderVersion;
    return this;
  }

  /**
   * The version number that the Buyer uses to refer to this particular version of the order
   * @return orderVersion
  **/
  @ApiModelProperty(required = true, value = "The version number that the Buyer uses to refer to this particular version of the order")
  @NotNull


  public String getOrderVersion() {
    return orderVersion;
  }

  public void setOrderVersion(String orderVersion) {
    this.orderVersion = orderVersion;
  }

  public ProductOrder projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together
   * @return projectId
  **/
  @ApiModelProperty(value = "An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together")


  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ProductOrder tspRestorationPriority(String tspRestorationPriority) {
    this.tspRestorationPriority = tspRestorationPriority;
    return this;
  }

  /**
   * Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook, The valid values are defined in ATIS OBF document: ATIS-0404001
   * @return tspRestorationPriority
  **/
  @ApiModelProperty(value = "Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook, The valid values are defined in ATIS OBF document: ATIS-0404001")


  public String getTspRestorationPriority() {
    return tspRestorationPriority;
  }

  public void setTspRestorationPriority(String tspRestorationPriority) {
    this.tspRestorationPriority = tspRestorationPriority;
  }

  public ProductOrder relatedBuyerPON(String relatedBuyerPON) {
    this.relatedBuyerPON = relatedBuyerPON;
    return this;
  }

  /**
   * Related Buyer Purchase Order Number (RPON)
   * @return relatedBuyerPON
  **/
  @ApiModelProperty(value = "Related Buyer Purchase Order Number (RPON)")


  public String getRelatedBuyerPON() {
    return relatedBuyerPON;
  }

  public void setRelatedBuyerPON(String relatedBuyerPON) {
    this.relatedBuyerPON = relatedBuyerPON;
  }

  public ProductOrder pricingMethod(PricingMethod pricingMethod) {
    this.pricingMethod = pricingMethod;
    return this;
  }

  /**
   * Get pricingMethod
   * @return pricingMethod
  **/
  @ApiModelProperty(value = "")

  @Valid

  public PricingMethod getPricingMethod() {
    return pricingMethod;
  }

  public void setPricingMethod(PricingMethod pricingMethod) {
    this.pricingMethod = pricingMethod;
  }

  public ProductOrder pricingReference(String pricingReference) {
    this.pricingReference = pricingReference;
    return this;
  }

  /**
   * The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id.
   * @return pricingReference
  **/
  @ApiModelProperty(value = "The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id.")


  public String getPricingReference() {
    return pricingReference;
  }

  public void setPricingReference(String pricingReference) {
    this.pricingReference = pricingReference;
  }

  public ProductOrder pricingTerm(Integer pricingTerm) {
    this.pricingTerm = pricingTerm;
    return this;
  }

  /**
   * The length of the contract in months.
   * @return pricingTerm
  **/
  @ApiModelProperty(value = "The length of the contract in months.")


  public Integer getPricingTerm() {
    return pricingTerm;
  }

  public void setPricingTerm(Integer pricingTerm) {
    this.pricingTerm = pricingTerm;
  }

  public ProductOrder billingAccount(BillingAccountRef billingAccount) {
    this.billingAccount = billingAccount;
    return this;
  }

  /**
   * Get billingAccount
   * @return billingAccount
  **/
  @ApiModelProperty(value = "")

  @Valid

  public BillingAccountRef getBillingAccount() {
    return billingAccount;
  }

  public void setBillingAccount(BillingAccountRef billingAccount) {
    this.billingAccount = billingAccount;
  }

  public ProductOrder relatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public ProductOrder addRelatedPartyItem(RelatedParty relatedPartyItem) {
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Get relatedParty
   * @return relatedParty
  **/
  @ApiModelProperty(required = true, value = "")
  @NotNull

  @Valid

  public List<RelatedParty> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public ProductOrder note(List<Note> note) {
    this.note = note;
    return this;
  }

  public ProductOrder addNoteItem(Note noteItem) {
    if (this.note == null) {
      this.note = new ArrayList<Note>();
    }
    this.note.add(noteItem);
    return this;
  }

  /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")

  @Valid

  public List<Note> getNote() {
    return note;
  }

  public void setNote(List<Note> note) {
    this.note = note;
  }

  public ProductOrder orderItem(List<OrderItem> orderItem) {
    this.orderItem = orderItem;
    return this;
  }

  public ProductOrder addOrderItemItem(OrderItem orderItemItem) {
    this.orderItem.add(orderItemItem);
    return this;
  }

  /**
   * Get orderItem
   * @return orderItem
  **/
  @ApiModelProperty(required = true, value = "")
  @NotNull

  @Valid

  public List<OrderItem> getOrderItem() {
    return orderItem;
  }

  public void setOrderItem(List<OrderItem> orderItem) {
    this.orderItem = orderItem;
  }

  public ProductOrder orderMessage(List<OrderMessage> orderMessage) {
    this.orderMessage = orderMessage;
    return this;
  }

  public ProductOrder addOrderMessageItem(OrderMessage orderMessageItem) {
    if (this.orderMessage == null) {
      this.orderMessage = new ArrayList<OrderMessage>();
    }
    this.orderMessage.add(orderMessageItem);
    return this;
  }

  /**
   * Get orderMessage
   * @return orderMessage
  **/
  @ApiModelProperty(value = "")

  @Valid

  public List<OrderMessage> getOrderMessage() {
    return orderMessage;
  }

  public void setOrderMessage(List<OrderMessage> orderMessage) {
    this.orderMessage = orderMessage;
  }

  public ProductOrder type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Technical attribute to extend the API
   * @return type
  **/
  @ApiModelProperty(value = "Technical attribute to extend the API")


  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ProductOrder schemaLocation(String schemaLocation) {
    this.schemaLocation = schemaLocation;
    return this;
  }

  /**
   * Technical attribute to extend the API
   * @return schemaLocation
  **/
  @ApiModelProperty(value = "Technical attribute to extend the API")


  public String getSchemaLocation() {
    return schemaLocation;
  }

  public void setSchemaLocation(String schemaLocation) {
    this.schemaLocation = schemaLocation;
  }

  public ProductOrder baseType(String baseType) {
    this.baseType = baseType;
    return this;
  }

  /**
   * Technical attribute to extend the API
   * @return baseType
  **/
  @ApiModelProperty(value = "Technical attribute to extend the API")


  public String getBaseType() {
    return baseType;
  }

  public void setBaseType(String baseType) {
    this.baseType = baseType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductOrder productOrder = (ProductOrder) o;
    return Objects.equals(this.id, productOrder.id) &&
        Objects.equals(this.href, productOrder.href) &&
        Objects.equals(this.externalId, productOrder.externalId) &&
        Objects.equals(this.orderDate, productOrder.orderDate) &&
        Objects.equals(this.buyerRequestDate, productOrder.buyerRequestDate) &&
        Objects.equals(this.state, productOrder.state) &&
        Objects.equals(this.requestedStartDate, productOrder.requestedStartDate) &&
        Objects.equals(this.requestedCompletionDate, productOrder.requestedCompletionDate) &&
        Objects.equals(this.expectedCompletionDate, productOrder.expectedCompletionDate) &&
        Objects.equals(this.completionDate, productOrder.completionDate) &&
        Objects.equals(this.cancellationDate, productOrder.cancellationDate) &&
        Objects.equals(this.cancellationReason, productOrder.cancellationReason) &&
        Objects.equals(this.expeditePriority, productOrder.expeditePriority) &&
        Objects.equals(this.priority, productOrder.priority) &&
        Objects.equals(this.orderActivity, productOrder.orderActivity) &&
        Objects.equals(this.desiredResponses, productOrder.desiredResponses) &&
        Objects.equals(this.orderVersion, productOrder.orderVersion) &&
        Objects.equals(this.projectId, productOrder.projectId) &&
        Objects.equals(this.tspRestorationPriority, productOrder.tspRestorationPriority) &&
        Objects.equals(this.relatedBuyerPON, productOrder.relatedBuyerPON) &&
        Objects.equals(this.pricingMethod, productOrder.pricingMethod) &&
        Objects.equals(this.pricingReference, productOrder.pricingReference) &&
        Objects.equals(this.pricingTerm, productOrder.pricingTerm) &&
        Objects.equals(this.billingAccount, productOrder.billingAccount) &&
        Objects.equals(this.relatedParty, productOrder.relatedParty) &&
        Objects.equals(this.note, productOrder.note) &&
        Objects.equals(this.orderItem, productOrder.orderItem) &&
        Objects.equals(this.orderMessage, productOrder.orderMessage) &&
        Objects.equals(this.type, productOrder.type) &&
        Objects.equals(this.schemaLocation, productOrder.schemaLocation) &&
        Objects.equals(this.baseType, productOrder.baseType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, externalId, orderDate, buyerRequestDate, state, requestedStartDate, requestedCompletionDate, expectedCompletionDate, completionDate, cancellationDate, cancellationReason, expeditePriority, priority, orderActivity, desiredResponses, orderVersion, projectId, tspRestorationPriority, relatedBuyerPON, pricingMethod, pricingReference, pricingTerm, billingAccount, relatedParty, note, orderItem, orderMessage, type, schemaLocation, baseType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOrder {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    buyerRequestDate: ").append(toIndentedString(buyerRequestDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    requestedStartDate: ").append(toIndentedString(requestedStartDate)).append("\n");
    sb.append("    requestedCompletionDate: ").append(toIndentedString(requestedCompletionDate)).append("\n");
    sb.append("    expectedCompletionDate: ").append(toIndentedString(expectedCompletionDate)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    cancellationDate: ").append(toIndentedString(cancellationDate)).append("\n");
    sb.append("    cancellationReason: ").append(toIndentedString(cancellationReason)).append("\n");
    sb.append("    expeditePriority: ").append(toIndentedString(expeditePriority)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    orderActivity: ").append(toIndentedString(orderActivity)).append("\n");
    sb.append("    desiredResponses: ").append(toIndentedString(desiredResponses)).append("\n");
    sb.append("    orderVersion: ").append(toIndentedString(orderVersion)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    tspRestorationPriority: ").append(toIndentedString(tspRestorationPriority)).append("\n");
    sb.append("    relatedBuyerPON: ").append(toIndentedString(relatedBuyerPON)).append("\n");
    sb.append("    pricingMethod: ").append(toIndentedString(pricingMethod)).append("\n");
    sb.append("    pricingReference: ").append(toIndentedString(pricingReference)).append("\n");
    sb.append("    pricingTerm: ").append(toIndentedString(pricingTerm)).append("\n");
    sb.append("    billingAccount: ").append(toIndentedString(billingAccount)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    orderItem: ").append(toIndentedString(orderItem)).append("\n");
    sb.append("    orderMessage: ").append(toIndentedString(orderMessage)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    schemaLocation: ").append(toIndentedString(schemaLocation)).append("\n");
    sb.append("    baseType: ").append(toIndentedString(baseType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

